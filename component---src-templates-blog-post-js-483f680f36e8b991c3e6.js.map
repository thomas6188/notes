{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","pageContext","previous","next","slug","editUrl","replace","discussUrl","encodeURIComponent","location","title","frontmatter","description","spoiler","fields","to","style","scale","display","marginBottom","rhythm","marginTop","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","href","target","rel","fontFamily","boxShadow","textDecoration","color","flexWrap","justifyContent","listStyle","padding","React","Component","pageQuery"],"mappings":"oTAUA,IAGMA,E,0LACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAF3B,EAG0BD,KAAKC,MAAMK,YAApCC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAAMC,EAHjB,EAGiBA,KAClBC,EAAO,6DAAsFD,EAAKE,QACtG,MACA,IAFW,MAIPC,EAAU,uCAA0CC,mBAV7C,sCAWGJ,GAEhB,OACE,kBAAC,IAAD,CAAQK,SAAUd,KAAKC,MAAMa,SAAUC,MAAOX,GAC5C,kBAAC,IAAD,CACEW,MAAOhB,EAAKiB,YAAYD,MACxBE,YAAalB,EAAKiB,YAAYE,QAC9BT,KAAMV,EAAKoB,OAAOV,OAEpB,kBAAC,OAAD,CAAMW,GAAI,SAAV,uBACA,4BAAKrB,EAAKiB,YAAYD,OACtB,uBACEM,MAAK,iBACAC,aAAM,IADN,CAEHC,QAAS,QACTC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpB1B,EAAKiB,YAAYW,KARpB,MASSC,YAAkB7B,EAAK8B,aAEhC,yBAAKC,wBAAyB,CAAEC,OAAQhC,EAAKiC,QAC7C,6BACA,2BACE,kBAAC,OAAD,CAAMZ,GAAI,SAAV,qBADF,MAGE,uBAAGa,KAAMvB,EAASwB,OAAO,SAASC,IAAI,uBAAtC,kBAHF,MAOE,uBAAGF,KAAMrB,EAAYsB,OAAO,SAASC,IAAI,uBAAzC,uBAIF,wBACEd,MAAO,CACLG,aAAcC,YAAO,MAGzB,wBACEJ,MAAO,CACLe,WAAY,yBACZV,UAAWD,YAAO,OAGpB,kBAAC,OAAD,CACEJ,MAAO,CACLgB,UAAW,OACXC,eAAgB,OAChBC,MAAO,oBAETnB,GAAI,KAEHhB,IAGL,kBAAC,IAAD,MACA,6BACE,wBACEiB,MAAO,CACLE,QAAS,OACTiB,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGpC,GACC,kBAAC,OAAD,CAAMa,GAAI,QAAUb,EAASY,OAAOV,KAAM0B,IAAI,QAA9C,KACK5B,EAASS,YAAYD,QAI9B,4BACGP,GACC,kBAAC,OAAD,CAAMY,GAAI,QAAUZ,EAAKW,OAAOV,KAAM0B,IAAI,QACvC3B,EAAKQ,YAAYD,MADpB,W,GAvFe6B,IAAMC,WAmGtBhD,YAER,IAAMiD,EAAS","file":"component---src-templates-blog-post-js-483f680f36e8b991c3e6.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport { formatReadingTime } from '../utils/helpers'\nimport { rhythm, scale } from '../utils/typography'\n\nconst GITHUB_USERNAME = 'thomas6188'\nconst GITHUB_REPO_NAME = 'notes'\nconst PAGE_URL = 'https://thomas6188.github.io/notes/'\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const { previous, next, slug } = this.props.pageContext\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${slug.replace(\n      /\\//g,\n      ''\n    )}.md`\n    const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n      `${PAGE_URL}${slug}`\n    )}`\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <Link to={'/blog'}>← Back to Blog list</Link>\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: 'block',\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n          {` • ${formatReadingTime(post.timeToRead)}`}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr></hr>\n        <p>\n          <Link to={'/blog'}>Back to Blog list</Link>\n          {` • `}\n          <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Edit on GitHub\n          </a>\n          {` • `}\n          <a href={discussUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Discuss on Twitter\n          </a>\n        </p>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <h3\n          style={{\n            fontFamily: 'Montserrat, sans-serif',\n            marginTop: rhythm(0.25),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'rgb(240, 94, 94)',\n            }}\n            to={'/'}\n          >\n            {siteTitle}\n          </Link>\n        </h3>\n        <Bio />\n        <nav>\n          <ul\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-between',\n              listStyle: 'none',\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={'/blog' + previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={'/blog' + next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}