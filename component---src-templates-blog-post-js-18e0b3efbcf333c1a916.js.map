{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","get","pageContext","previous","next","slug","encodeURIComponent","location","title","frontmatter","description","spoiler","fields","style","display","marginBottom","rhythm","marginTop","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","to","flexWrap","justifyContent","listStyle","padding","rel","React","Component","pageQuery"],"mappings":"gSAUA,IAIMA,E,0LAEJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eADtB,GAEWC,IAAIJ,KAAKC,MAAO,gCACDD,KAAKC,MAAMI,aAApCC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAAMC,EAHjB,EAGiBA,KAEkCC,mBAT7C,sCAUGD,GAGhB,OACE,kBAAC,IAAD,CAAQE,SAAUV,KAAKC,MAAMS,UAE3B,kBAAC,IAAD,CACEC,MAAOZ,EAAKa,YAAYD,MACxBE,YAAad,EAAKa,YAAYE,QAC9BN,KAAMT,EAAKgB,OAAOP,OAGpB,kBAAC,IAAD,MAEA,4BAAKT,EAAKa,YAAYD,OAGtB,uBAAGK,MAAO,CAAEC,QAAS,QAASC,aAAcC,YAAO,GAAIC,UAAWD,YAAO,MACtEpB,EAAKa,YAAYS,KADpB,UACiCC,YAAkBvB,EAAKwB,aAIxD,yBAAKC,wBAAyB,CAAEC,OAAQ1B,EAAK2B,QAC7C,6BAGA,2BACE,kBAAC,OAAD,CAAMC,GAAI,SAAV,sBAGF,wBAAIX,MAAO,CAAEE,aAAcC,YAAO,MAKlC,6BACE,wBACEH,MAAO,CACLC,QAAS,OACTW,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGzB,GACC,kBAAC,OAAD,CAAMqB,GAAI,QAAUrB,EAASS,OAAOP,KAAMwB,IAAI,QAA9C,KACK1B,EAASM,YAAYD,QAI9B,4BACGJ,GACC,kBAAC,OAAD,CAAMoB,GAAI,QAAUpB,EAAKQ,OAAOP,KAAMwB,IAAI,QACvCzB,EAAKK,YAAYD,MADpB,W,GA9DesB,IAAMC,WA6EtBrC,YAER,IAAMsC,EAAS","file":"component---src-templates-blog-post-js-18e0b3efbcf333c1a916.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport { formatReadingTime } from '../utils/helpers'\nimport { rhythm, scale } from '../utils/typography'\n\nconst GITHUB_USERNAME = 'thomas6188'\nconst GITHUB_REPO_NAME = 'notes'\nconst PAGE_URL = 'https://thomas6188.github.io/notes/'\n\nclass BlogPostTemplate extends React.Component {\n\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    const { previous, next, slug } = this.props.pageContext;\n\n    const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n      `${PAGE_URL}${slug}`\n    )}`;\n\n    return (\n      <Layout location={this.props.location} >\n\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        {/* Bio */}\n        <Bio />\n\n        <h1>{post.frontmatter.title}</h1>\n\n        {/* Post Meta */}\n        <p style={{ display: 'block', marginBottom: rhythm(1), marginTop: rhythm(0.5), }}>\n          {post.frontmatter.date} {` • ${formatReadingTime(post.timeToRead)}`}\n        </p>\n\n        {/* Post Content */}\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr></hr>\n\n        {/* Post Footer */}\n        <p>\n          <Link to={'/blog'}>Back to Blog list</Link>\n         \n        </p>\n        <hr style={{ marginBottom: rhythm(1), }} />\n\n\n\n        {/* Navigation - Previous and Next posts */}\n        <nav>\n          <ul\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-between',\n              listStyle: 'none',\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={'/blog' + previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={'/blog' + next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n\n        \n\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}