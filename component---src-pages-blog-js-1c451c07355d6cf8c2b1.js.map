{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/pages/blog.js"],"names":["Footer","render","style","marginTop","rhythm","paddingTop","float","href","target","rel","React","Component","BlogIndex","siteTitle","get","this","posts","Layout","location","props","title","SEO","Bio","map","node","fields","slug","key","marginBottom","boxShadow","to","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","pageQuery"],"mappings":"wRAwCeA,E,0LAnCbC,OAAA,WACE,OACE,4BACEC,MAAO,CACLC,UAAWC,YAAO,KAClBC,WAAYD,YAAO,KAGrB,yBAAKF,MAAO,CAAEI,MAAO,UACnB,uBACEC,KAAK,WACLC,OAAO,SACPC,IAAI,uBAHN,QAOF,uBACEF,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAHN,WAdF,KAoBc,IACZ,uBACEF,KAAK,gCACLC,OAAO,SACPC,IAAI,uBAHN,Y,GAxBaC,IAAMC,W,gBCOrBC,E,0LACJX,OAAA,WACE,IAAMY,EAAYC,IAAIC,KAAM,sCAKtBC,GAJkBF,IACtBC,KACA,4CAEYD,IAAIC,KAAM,uCAExB,OACE,kBAACE,EAAA,EAAD,CAAQC,SAAUH,KAAKI,MAAMD,SAAUE,MAAOP,GAC5C,kBAACQ,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACCN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNJ,EAAQN,IAAIU,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACE,yBAAKC,IAAKH,EAAKC,OAAOC,MACpB,wBACExB,MAAO,CACL0B,aAAcxB,YAAO,EAAI,KAG3B,kBAAC,OAAD,CACEF,MAAO,CAAE2B,UAAW,QACpBC,GAAI,QAAUN,EAAKC,OAAOC,MAEzBN,IAGL,+BACGI,EAAKO,YAAYC,KADpB,MAESC,YAAkBT,EAAKU,aAEhC,uBACEC,wBAAyB,CAAEC,OAAQZ,EAAKO,YAAYM,eAK5D,kBAAC,EAAD,Q,GAvCgB3B,IAAMC,WA+CjB2B,GAFE1B,YAEO","file":"component---src-pages-blog-js-1c451c07355d6cf8c2b1.js","sourcesContent":["import React from 'react'\r\n\r\nimport { rhythm } from '../utils/typography'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer\r\n        style={{\r\n          marginTop: rhythm(2.5),\r\n          paddingTop: rhythm(1),\r\n        }}\r\n      >\r\n        <div style={{ float: 'right' }}>\r\n          <a\r\n            href=\"/rss.xml\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >rss</a>\r\n        </div>\r\n\r\n        <a\r\n          href=\"https://twitter.com/thomas6188\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          twitter\r\n        </a> &bull;{' '}\r\n        <a\r\n          href=\"https://github.com/thomas6188\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          github\r\n        </a>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport Footer from '../components/Footer'\nimport { formatReadingTime } from '../utils/helpers'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link\n                  style={{ boxShadow: 'none' }}\n                  to={'/blog' + node.fields.slug}\n                >\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date}\n                {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n              </small>\n              <p\n                dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n              />\n            </div>\n          )\n        })}\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}